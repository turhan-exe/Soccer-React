name: Firebase CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  FUNCTIONS_DIR: src/functions

jobs:
  ci:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (Web)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Enable corepack (pnpm)
        run: corepack enable

      - name: Install deps (web)
        run: pnpm install --frozen-lockfile

      - name: Test (web)
        run: pnpm run test:ci

      - name: Build (web)
        run: pnpm run build

      - name: Setup Node (Functions)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ env.FUNCTIONS_DIR }}/package-lock.json

      - name: Install deps (functions)
        working-directory: ${{ env.FUNCTIONS_DIR }}
        run: npm ci

      - name: Build (functions)
        working-directory: ${{ env.FUNCTIONS_DIR }}
        run: npm run build

  preview:
    name: Hosting Preview (on PR)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Enable corepack (pnpm)
        run: corepack enable

      - name: Install deps (web)
        run: pnpm install --frozen-lockfile

      - name: Build web
        run: pnpm run build

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Deploy preview channel
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          CH="pr-${{ github.event.number }}"
          echo "Deploying preview channel: $CH"
          firebase hosting:channel:deploy "$CH" \
            --project "$PROJECT_ID" \
            --expires 7d \
            --json > preview.json
          echo "Preview JSON:" && cat preview.json
          echo "::notice title=Preview Channel::pr-${{ github.event.number }}"

  deploy:
    name: Deploy to Production (manual approval)
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: ci
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (Web)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Enable corepack (pnpm)
        run: corepack enable

      - name: Install deps (web)
        run: pnpm install --frozen-lockfile

      - name: Build (web)
        run: pnpm run build

      - name: Setup Node (Functions)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: src/functions/package-lock.json

      - name: Install deps (functions)
        working-directory: src/functions
        run: npm ci

      - name: Build (functions)
        working-directory: src/functions
        run: npm run build

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Deploy Firestore rules & indexes
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: firebase deploy --only firestore --project "$PROJECT_ID"

      - name: Deploy Functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: firebase deploy --only functions --project "$PROJECT_ID"

      - name: Deploy Hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: firebase deploy --only hosting --project "$PROJECT_ID"
